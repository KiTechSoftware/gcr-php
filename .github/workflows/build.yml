name: Build and Push Multi-Arch Docker Images

on:
  push:
    branches:
      - main
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dockerfile:
          - 8.3/cli/alpine
          - 8.3/fpm/alpine
          - 8.3/cli/debian
          - 8.3/fpm/debian
          - 8.4/cli/alpine
          - 8.4/fpm/alpine
          - 8.4/cli/debian
          - 8.4/fpm/debian
        os:
          - alpine
          - debian
        include:
          - dockerfile: 8.3/cli/alpine
            tag: "8.3-cli-alpine"
          - dockerfile: 8.3/fpm/alpine
            tag: "8.3-fpm-alpine"
          - dockerfile: 8.3/cli/debian
            tag: "8.3-cli-debian"
          - dockerfile: 8.3/fpm/debian
            tag: "8.3-fpm-debian"
          - dockerfile: 8.4/cli/alpine
            tag: "8.4-cli-alpine"
          - dockerfile: 8.4/fpm/alpine
            tag: "8.4-fpm-alpine"
          - dockerfile: 8.4/cli/debian
            tag: "8.4-cli-debian"
          - dockerfile: 8.4/fpm/debian
            tag: "8.4-fpm-debian"
      fail-fast: false

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver-opts: image=moby/buildkit:latest,network=host

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ vars.IMAGE }}
        tags: |
          type=ref,event=branch
          type=ref,event=tag
        labels: |
          org.opencontainers.image.source=https://github.com/KiTechSoftware/gcr-php
          org.opencontainers.image.created=${{ steps.meta.outputs.created }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.version=${{ steps.meta.outputs.version }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v6
      with:
        context: ./${{ matrix.dockerfile }}
        file: ./${{ matrix.dockerfile }}/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Scan Docker Image
      uses: aquasecurity/trivy-action@0.29.0
      with:
        image-ref: ${{ steps.meta.outputs.tags }}

    - name: Cleanup Cache
      if: always()
      run: rm -rf /tmp/.buildx-cache
