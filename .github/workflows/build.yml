name: Build and Push Multi-Arch Docker Images

on:
  push:
    branches:
      - main
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

  workflow_dispatch: {}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dockerfile:
          - 8.3/
          - 8.4/
        include:
          - dockerfile: "8.3"
            tag: "8.3"
            latest: false
          - dockerfile: "8.4"
            tag: "8.4"
            latest: true
      fail-fast: false

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true
        driver-opts: network=host

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Set up Docker cache
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: buildx-${{ github.workflow }}-${{ github.ref_name }}-${{ matrix.tag }}
        restore-keys: |
          buildx-${{ github.workflow }}-${{ github.ref_name }}-
          buildx-${{ github.workflow }}-
          buildx-

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ vars.IMAGE }}
        tags: |
          type=raw,value=${{ matrix.tag }}
          ${{ matrix.latest == 'true' && 'type=raw,value=latest' || '' }}
        labels: |
          org.opencontainers.image.title=PHP Images
          org.opencontainers.image.description=Multi-arch PHP images built for various configurations
          org.opencontainers.image.source=https://github.com/KiTechSoftware/gcr-php
          org.opencontainers.image.url=https://github.com/KiTechSoftware/gcr-php
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.created=${{ steps.meta.outputs.created }}
          org.opencontainers.image.version=${{ matrix.tag }}
          org.opencontainers.image.licenses=MIT

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v6
      with:
        context: ./${{ matrix.dockerfile }}
        file: ./${{ matrix.dockerfile }}/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        cache-from: |
          type=registry,ref=${{ vars.IMAGE }}:${{ matrix.tag }}
          type=local,src=/tmp/.buildx-cache
        cache-to: |
          type=local,dest=/tmp/.buildx-cache,mode=max
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Scan Docker Image
      uses: aquasecurity/trivy-action@0.29.0
      with:
        image-ref: ${{ vars.IMAGE }}:${{ matrix.tag }}

    - name: Cleanup Cache
      if: always()
      run: rm -rf /tmp/.buildx-cache
